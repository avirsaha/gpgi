name: CI
on:
  pull_request:
  workflow_dispatch:

jobs:
  unit-tests:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          #- macos-latest
          #- windows-latest
        python-version:
          - '3.9'
          #- '3.10'

    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout Source
      uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Build
      run: python -m pip install ".[test]"

    - run: python -m coverage run -m pytest --color=yes

    - name: Upload coverage data
      # only using reports from ubuntu because
      # combining reports from multiple platforms is tricky (or impossible ?)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v3
      with:
        name: gpgi_coverage_data
        path: ".coverage.*"
        if-no-files-found: ignore

  image-tests:
    name: Image tests
    runs-on: ubuntu-latest

    concurrency:
      # auto-cancel any in-progress job *on the same branch*
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - uses: actions/checkout@v3

    - name: Build
      run: python -m pip install ".[test]"

    - name: Run Image Tests
      run: |
        pytest --color=yes --mpl -m mpl_image_compare \
               --mpl-generate-summary=html \
               --mpl-results-path=gpgi_pytest_mpl_results \
               --mpl-baseline-path=tests/pytest_mpl_baseline

    - name: Generate new image baseline
      if: failure()
      run: |
        pytest --color=yes --mpl -m mpl_image_compare \
               --mpl-generate-path=pytest_mpl_new_baseline \
               --last-failed

    # always attempt to upload artifacts, even
    # (and especially) in case of failure.
    - name: Upload pytest-mpl report
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: gpgi_pytest_mpl_results
        path: pytest_mpl_results/*

    - name: Upload pytest-mpl baseline
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: gpgi_pytest_mpl_new_baseline
        path: pytest_mpl_new_baseline/*
        if-no-files-found: ignore


  coverage:
    name: Combine & check coverage.
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          # Use latest Python, so it understands all syntax.
          python-version: "3.10"

      - run: python -m pip install --upgrade coverage[toml]

      - uses: actions/download-artifact@v3
        with:
          name: gpgi_coverage_data

      - name: Check coverage
        run: |
          python -m coverage combine
          python -m coverage html --skip-covered --skip-empty
          python -m coverage report --fail-under=100

      - name: Upload HTML report if check failed.
        uses: actions/upload-artifact@v3
        with:
          name: gpgi_coverage_report
          path: htmlcov
        if: ${{ failure() }}


  typecheck:
    runs-on: ubuntu-latest
    name: type check

    concurrency:
      # auto-cancel any in-progress job *on the same branch*
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Build
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install ".[typecheck]"

    - run: mypy gpgi
